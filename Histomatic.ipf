#pragma rtGlobals=1		// Use modern global access method.

function Histomatic(baseName, startIndex, endIndex, [gain, length, unit, mode, ffreq, binMult])
//Makes a histogram of pulse areas of multiple waveforms. 
//It also calculates the baseline, removes it, and plots a separate baseline histogram.
//All waves must be in the format basename+number (Example wave0, wave1... or trace3, trace4)
//startIndex = the number postfix you want to begin with
//endIndex = the number postfix you want to end with
//gain = the gain of the voltage data, defaults to 1
//length = the time window you want to look for the peak in. Not currently used.

String baseName
Variable startIndex, endIndex, gain, length, unit, mode, ffreq, binMult
Variable i, endtime

//Check to see if gain was supplied in the function call, if not, defaults to 1
if(ParamIsDefault(gain))
	gain=1
endif

//Averaging length for mode 2
if(ParamIsDefault(length))
	length=1e-6
endif

//Set unit to desired scale. Example, for microseconds, unit=1e-6
if(ParamIsDefault(unit))
	unit=1
else
	gain=gain*unit
endif

//Pick the mode type default is Gaussian fit =1. Averaging=2
if(ParamIsDefault(mode))
	mode=1
endif

//Pick a lowpass filter frequency, default is none
if(ParamIsDefault(ffreq))
	ffreq=0
endif

//Want more bins? You can make more now!
if(ParamIsDefault(binMult))
	binMult=2
endif




//Create some waves to put things in later
Make/O/N=(endIndex-startIndex+1) peaks
Make/O/N=(endIndex-startIndex+1) offsets
Make/O/N=(endIndex-startIndex+1) times


String str //Dummy variable

//Loop through all the waves in order, check the offset by averaging the pre-trigger values.
//Subtract the offset, divide by the gain, and fit to a gaussian.
//Add the offset value, the peak time, and the peak heights to waves
for (i=startIndex; i<=endIndex; i=i+1)
	str=baseName+num2str(i)
	Wave w=$str

	//w=w/gain
	
	if(ffreq>0)//Do some filtering!
		//Variable V_npnts, V_endRow, V_startRow //set up some variables to fill with the call to WaveStats
		WaveStats/Q w
		ffreq=ffreq*((pnt2x(pulse53, V_endRow)-pnt2x(pulse53, V_startRow))/V_npnts) //ffreq=ffreq/sample-rate
		Duplicate/O w, filtered;
		Make/O/D/N=0 coefs;
		FilterIIR/LO=(ffreq)/COEF coefs, filtered
	endif
		
	if (mode==1)
		//fits the peak to a gaussian and records the height and time value of the peak as well as the Y-offset	
		wave W_coef
		CurveFit/NTHR=0/N/Q/W=2 gauss w /NWOK
		peaks[i-1]=W_coef[1]/gain //height
		times[i-1]=W_coef[2] //time value
		offsets[i-1]=mean(w, 0, x2pnt(w,0))/gain
	elseif (mode==2)
		//takes an average for length seconds after the trigger
		peaks[i-1]=mean(w, 0, length)/gain
		offsets[i-1]=mean(w,0,x2pnt(w,0))/gain
		times[i-1]=0
	elseif(mode==3)
		//Convolves with wave you specify here
		offsets[i-1]=mean(w, 0, x2pnt(w,0))
		Duplicate/O w, w_conv
		w_conv = w_conv-offsets[i-1]
		Execute "Convolve/A :Packages:MultiPeakFit2:MPF_SetFolder_1:'Peak 0', w_conv;DelayUpdate"
		WaveStats/Q w_conv
		//peaks[i-1]=V_max
		peaks[i-1]=area(w,10,25E-6)
		times[i-1]=V_maxLoc
	elseif(mode==4)
		//Takes integral of trace
		offsets[i-1]=mean(w, 0, x2pnt(w,0))
		w = w-offsets[i-1]
		peaks[i-1]=area(w, 0,25E-6)
		times[i-1]=0
	endif
		
endfor

wave w=$str
WaveStats/Q w
endtime=w[V_maxRowLoc]

if(ffreq>0)//Do some cleanup
	KillWaves filtered, coefs
endif

if (mode==1 || mode==3 || mode==4)
do //This just removes data that fits more than 5 sigmas away from the average
	//Variable V_sdev, V_avg, V_min, V_max, V_minRowLoc, V_maxRowLoc <-- these are all auto generated by the WaveStats call
	Variable flag
	flag=0
	
	WaveStats/Q peaks
	if (V_min <= V_avg-5*V_sdev)
		DeletePoints V_minRowLoc, 1, peaks, offsets, times
		flag=1
	endif
	WaveStats/Q peaks
	if (V_max >= V_avg+5*V_sdev)
		DeletePoints V_maxRowLoc, 1, peaks, offsets, times
		flag=1
	endif
	
	WaveStats/Q offsets
	if (V_min <= V_avg-5*V_sdev)
		DeletePoints V_minRowLoc, 1, peaks, offsets, times
		flag=1
	endif
	WaveStats/Q offsets
	if (V_max >= V_avg+5*V_sdev)
		DeletePoints V_maxRowLoc, 1, peaks, offsets, times
		flag=1
	endif
	
	WaveStats/Q times
	if (V_min < 0)
		DeletePoints V_minRowLoc, 1, peaks, offsets, times
		flag=1
	endif
	WaveStats/Q times
	if (V_max > endtime)
		DeletePoints V_maxRowLoc, 1, peaks, offsets, times
		flag=1
	endif
while (flag==1)
endif


//The length of these waves corresponds to the /B option in the Histogram call.
//If you change that, you must change this to match.
Make/O/N=(binMult*round((1+log(endIndex-startIndex+1)/log(2)))) histPeaks
Make/O/N=(binMult*round((1+log(endIndex-startIndex+1)/log(2)))) histOffsets
Make/O/N=(binMult*round((1+log(endIndex-startIndex+1)/log(2)))) histTimes

//Make the histograms. If you change the /B flag, make sure to update the wave calls
Histogram/B=1/C peaks histPeaks
Histogram/B=1/C offsets histOffsets
Histogram/B=1/C times histTimes

//Plot the histograms. Mode=6 means cityscape type plot
Display/N=Pulse histPeaks
ModifyGraph/W=Pulse tick=2, mirror=2
Label/W=Pulse left "Counts"
Label/W=Pulse bottom "Pulse Heights (check gain and unit flags to figure this out)"
ModifyGraph/W=Pulse mode=5,toMode=1
ModifyGraph/W=Pulse hbFill=5,useBarStrokeRGB=1
ModifyGraph/W=Pulse mode=5,hbFill=5,toMode=1,useBarStrokeRGB=1

Display/N=Noise histOffsets
ModifyGraph/W=Noise tick=2, mirror=2
Label/W=Noise left "Counts"
Label/W=Noise bottom "Baseline offset from zero (same units as Pulse Heights)"
ModifyGraph/W=Noise mode=5,toMode=1
ModifyGraph/W=Noise hbFill=5,useBarStrokeRGB=1
ModifyGraph/W=Noise mode=5,hbFill=5,toMode=1,useBarStrokeRGB=1

Display/N=Delay histTimes
ModifyGraph/W=Delay tick=2, mirror=2
Label/W=Delay left "Counts"
Label/W=Delay bottom "Delay from trigger (s)"
ModifyGraph/W=Delay mode=5,toMode=1
ModifyGraph/W=Delay hbFill=5,useBarStrokeRGB=1
ModifyGraph/W=Delay mode=5,hbFill=5,toMode=1,useBarStrokeRGB=1

End